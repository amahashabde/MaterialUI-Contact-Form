{"version":3,"sources":["components/TopMenu.js","components/Footer.js","components/MainContent.js","components/LandingPage.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["makeStyles","theme","appBar","width","marginLeft","menuButton","marginRight","spacing","title","flexGrow","TopMenu","useStyles","top","bottom","footer","fontSize","Footer","classes","AppBar","position","className","Typography","variant","toolbar","mixins","backgroundColor","palette","background","default","padding","content","fullWidth","MainContent","Copyright","color","align","Link","href","Date","getFullYear","paper","marginTop","display","flexDirection","alignItems","avatar","margin","secondary","main","form","submit","SignUp","Container","component","maxWidth","CssBaseline","Avatar","noValidate","Grid","container","item","xs","TextField","autoComplete","name","required","id","label","autoFocus","Button","type","Box","mt","root","Home","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f0c1273d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Face';\r\nimport { MenuItem } from '@material-ui/core';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appBar: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nfunction TopMenu() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar position='fixed' className={classes.appBar}>\r\n      <Toolbar>\r\n        <IconButton\r\n          edge='start'\r\n          className={classes.menuButton}\r\n          color='inherit'\r\n          aria-label='menu'\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <MenuItem>\r\n          <Typography variant='h6' className={classes.title}>\r\n            Home\r\n          </Typography>\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <Typography variant='h6' className={classes.title}>\r\n            About\r\n          </Typography>\r\n        </MenuItem>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default TopMenu;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appBar: {\r\n    top: 'auto',\r\n    bottom: 0,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    marginLeft: 10,\r\n  },\r\n  footer: {\r\n    marginLeft: 20,\r\n    fontSize: 17,\r\n  },\r\n}));\r\n\r\nfunction Footer() {\r\n  const classes = useStyles();\r\n  return (\r\n    <AppBar position='fixed' className={classes.appBar}>\r\n      <Typography variant='h6' className={classes.footer}>\r\n        MK Decision © Copyright 2020\r\n      </Typography>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Typography } from '@material-ui/core';\r\nimport ReactDOM from 'react-dom';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  toolbar: theme.mixins.toolbar,\r\n  title: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: theme.spacing(3),\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  fullWidth: {\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\nfunction MainContent() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <main className={classes.fullWidth}>\r\n      <form className={classes.content} noValidate autoComplete=\"off\">\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"name\">Name</label>\r\n        <TextField id=\"standard-basic\" label=\"Standard\" />\r\n        </div>\r\n        <TextField id=\"filled-basic\" label=\"Filled\" variant=\"filled\" /><br></br>\r\n        <TextField id=\"outlined-basic\" label=\"Outlined\" variant=\"outlined\" /><br></br>\r\n      </form>\r\n      <div className={classes.content}>\r\n        <Typography paragraph>\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc maximus,\r\n          nulla ut commodo sagittis, sapien dui mattis dui, non pulvinar lorem\r\n          felis nec erat\r\n        </Typography>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default MainContent;\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport FeedbackOutlined from '@material-ui/icons/FeedbackOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n  \r\n    \r\n        function handleSubmit(event) {\r\n            event.preventDefault();\r\n            console.log( 'Submit button pressed'); \r\n           // You should see email and password in console.\r\n           // ..code to submit form to backend here...\r\n    \r\n        }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <FeedbackOutlined />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Thanks for connecting, please enter your message\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                name=\"Name\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"Name\"\r\n                label=\"First, Last Name\"\r\n                autoFocus\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"Message\"\r\n                label=\"Message\"\r\n                id=\"Message\"\r\n                autoComplete=\"none\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TopMenu from '../components/TopMenu';\r\n//import SideMenu from '../components/SideMenu';\r\nimport Footer from '../components/Footer';\r\nimport MainContent from '../components/MainContent';\r\nimport LandingPage from '../components/LandingPage';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n}));\r\n\r\nfunction Home() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <LandingPage />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Home from './pages/Home';\r\n\r\nfunction App() {\r\n  return <Home />;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}